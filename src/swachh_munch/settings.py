"""
Django settings for swachh_munch project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import dj_database_url
from decouple import config
from unipath import Path
import datetime
import sys
from mongoengine import *


PROJECT_DIR = Path(__file__).parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
APP_ENV = config('APP_ENV', default='production')
APP_NAME = config('APP_NAME', default='Swachh Munch')

SECRET_KEY = config('APP_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('APP_DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = []


# Application definition

DJANGO_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)

THIRD_PARTY_APPS = (    
    'rest_framework',
    'django_mongoengine',
    'rest_framework_mongoengine',
)

LOCAL_APPS = (
    'basic',
    'profiles',
    'events',
)

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'swachh_munch.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            PROJECT_DIR.parent.child('templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'swachh_munch.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'sqlite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': PROJECT_DIR.parent.child('db.sqlite3'),
    },
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config('DB_NAME', default='django_swachh_munch'),
        'USER': config('DB_USERNAME', default='root'),
        'PASSWORD': config('DB_PASSWORD', default=''),
    },
}


# MongoDB settings
MONGODB_DATABASES = {
    "default": {
        "name": config('DB_NAME', default='django_swachh_munch'),
        "host": 'localhost',
        "password": '',
        "username": '',
        "tz_aware": True, # if you using timezones in django (USE_TZ = True)
    },
}

# Set sqlite to run tests

if 'test' in sys.argv:
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': PROJECT_DIR.parent.child('db.sqlite3'),
    }
    MONGODB_DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': PROJECT_DIR.parent.child('db.sqlite3'),
    }

# DATABASE_ROUTERS = ['profiles.routers.ProfileRouter',]


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'profiles.User'

AUTHENTICATION_BACKENDS = ['profiles.auth_backend.CustomModelBackend']

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = config('APP_LOCALE', default='en-us')

TIME_ZONE = config('APP_TIME_ZONE', default='Asia/Kolkata')

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Provide a lists of languages which your site supports.
LANGUAGES = (
    ('en', 'English'),
    ('hi', 'Hindi'),
)

# Tell Django where the project's translation files should be.
LOCALE_PATHS = (
    PROJECT_DIR.parent.child('locale'),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATICFILES_DIRS = (
    PROJECT_DIR.parent.child('static'),
)

STATIC_URL = '/static/'

# EMAIL specific
EMAIL_ENABLED = config('EMAIL_ENABLED', default=True, cast=bool)
EMAIL_HOST = config('EMAIL_HOST', default='localhost')
EMAIL_PORT = config('EMAIL_PORT', default=3306)
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='root')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=False, cast=bool)
DEFAULT_FROM_EMAIL = 'Nageswara Rao <nag.samayam@gmail.com>'

# REST API
REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.AcceptHeaderVersioning',

    # Testing specific
    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
}

JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=3600),
    'JWT_AUTH_HEADER_PREFIX': 'Bearer',
}
